% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api_fit_outlier.R
\name{fit_outlier}
\alias{fit_outlier}
\title{Fit Outlier}
\usage{
fit_outlier(A, z, adj, alpha = 0.05, nsim = 5000, ncores = 1, validate = TRUE)
}
\arguments{
\item{A}{Character Matrix (data)}

\item{z}{Named vector (same names as \code{colnames(A)})}

\item{adj}{Adjacency list of a decomposable graph}

\item{alpha}{The significance level}

\item{nsim}{Number of simulations}

\item{ncores}{Number of cores to use in parallelization}

\item{validate}{Logical. If true, it checks if \code{A} has only single character values and converts it if not.}
}
\description{
A convinient wrapper around the \code{outlier_model} for doing outlier test
}
\examples{
\dontrun{
library(dplyr)

# All handwritten digits that have true class equal to a "1".
d <- digits %>%
  filter(class == "1") %>%
  select(-class)

# A handwritten digit with true class equal to "7"
z <- digits %>%
  filter(class == "7") %>%
  select(-class) %>%
  slice(1) %>%
  unlist()

# Fit an interaction graph
G <- fit_graph(d, trace = FALSE)
plot(G, vertex.size = 1.5)

# Test if z is an outlier
m <- fit_outlier(as.matrix(d), z, adj_lst(G))
print(m)
pmf(m)
}
}
